name: Prepare for fixing code
description: Prepare for fixing code
inputs:
  app_id:
    description: |
      GitHub App ID
    required: true
  app_private_key:
    description: |
      GitHub App Private Key
    required: true
  workflow_name:
    description: |
      Client Workflow name. If this is empty, the action does not check the workflow name.
    required: false
    default: securefix
  allow_workflow_fix:
    description: |
      Either true or false. If true, the action allows the workflow to fix the code.
    required: false
    default: "false"
  config:
    description: |
      YAML config to push other repositories and branches.
    required: false
  config_file:
    description: |
      A file path to YAML config.
    required: false
  label_name:
    description: |
      Label name to trigger the action.
    required: false
    default: ${{github.event.label.name}}
  label_description:
    description: |
      Label description to trigger the action.
      The format must be <repository owner>/<repository name>/<workflow run ID>.
    required: false
    default: ${{github.event.label.description}}
  delete_label:
    description: |
      Either true or false. If true, the label is deleted.
    required: false
    default: "true"
  
outputs:
  pull_request:
    description: |
      Pull Request
    value: ${{steps.js.outputs.pull_request}}
  pull_request_number:
    description: |
      Pull Request number
    value: ${{steps.pr.outputs.pull_request_number}}
  workflow_run:
    description: |
      Workflow Run
    value: ${{steps.js.outputs.workflow_run}}
  client_repository:
    description: |
      Repository Full Name
    value: ${{steps.info.outputs.repo_full_name}}
  push_repository:
    description: |
      Repository Full Name
    value: ${{steps.js.outputs.repository}}
  branch:
    description: |
      Branch
    value: ${{steps.js.outputs.branch}}
  create_pull_request:
    description: |
      Created pull request parameter
    value: ${{steps.js.outputs.create_pull_request}}
  workflow_run_id:
    description: |
      Workflow Run ID
    value: ${{steps.info.outputs.run_id}}
  metadata:
    description: |
      Metadata
    value: ${{steps.js.outputs.metadata}}
  fixed_files:
    description: |
      Fixed file paths
    value: ${{steps.js.outputs.fixed_files}}
  github_token:
    description: |
      GitHub App token
    value: ${{steps.token.outputs.token}}
  github_token_for_push:
    description: |
      GitHub App token to push a commit to the other repository
    value: ${{steps.token2.outputs.token}}
runs:
  using: composite
  steps:
    - id: info
      shell: bash
      env:
        APP_ID: ${{inputs.app_id}}
        APP_PRIVATE_KEY: ${{inputs.app_private_key}}
        LABEL_NAME: ${{inputs.label_name}}
        LABEL_DESCRIPTION: ${{github.event.label.description}}
      run: |
        if [ -z "$APP_ID" ]; then
          echo "::error:: GitHub App ID is required"
          exit 1
        fi
        if [ -z "$APP_PRIVATE_KEY" ]; then
          echo "::error:: GitHub App Private Key is required"
          exit 1
        fi
        if [ -z "$LABEL_NAME" ]; then
          echo "::error:: Label name is required"
          exit 1
        fi
        if [ -z "$LABEL_DESCRIPTION" ]; then
          echo "::error:: Label description is required"
          exit 1
        fi
        repo_full_name="${LABEL_DESCRIPTION%/*}"
        repo="${repo_full_name#*/}"
        run_id="${LABEL_DESCRIPTION##*/}"
        if [ -z "$repo_full_name" ] || [ -z "$repo" ]; then
          echo "::error:: Label description must be in the format <repository owner>/<repository name>/<workflow run ID>"
          exit 1
        fi
        {
          echo "repo_full_name=${repo_full_name}"
          echo "repo=${repo_full_name#*/}"
          echo "run_id=${LABEL_DESCRIPTION##*/}"
        } >> "$GITHUB_OUTPUT"

    # Delete a label
    # github.token requires issues:write permission
    - shell: bash
      if: inputs.delete_label == 'true'
      env:
        GH_TOKEN: ${{ github.token }}
        LABEL_NAME: ${{ inputs.label_name }}
      run: |
        gh label delete --yes "$LABEL_NAME" || :

    - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      id: permissions
      env:
        ALLOW_WORKFLOW_FIX: ${{inputs.allow_workflow_fix}}
      with:
        script: |
          let permissions = {
            actions: "read",
            contents: "write",
            pull_requests: "write",
          };
          if (process.env.ALLOW_WORKFLOW_FIX === 'true') {
            permissions.workflows = "write";
          }
          return permissions;

    # Create a GitHub App token
    - uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
      id: token
      with:
        app_id: ${{inputs.app_id}}
        private_key: ${{inputs.app_private_key}}
        repositories: >-
          ["${{ steps.info.outputs.repo }}"]
        permissions: ${{ steps.permissions.outputs.result }}

    # Download a GitHub Actions Artifact
    - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        github-token: ${{steps.token.outputs.token}}
        name: ${{github.event.label.name}}
        repository: ${{steps.info.outputs.repo_full_name}}
        run-id: ${{steps.info.outputs.run_id}}

    - uses: csm-actions/securefix-action/js@d5b6417e93bb3bcd40c7a7a28d20d6220140f13c
      id: js
      with:
        action: validate-repository
        metadata_file: ${{github.event.label.name}}.json
        changed_files: ${{ github.event.label.name}}_files.txt
        config: ${{inputs.config}}
        config_file: ${{inputs.config_file}}
        workflow_name: ${{inputs.workflow_name}}
        allow_workflow_fix: ${{inputs.allow_workflow_fix}}
        run_id: ${{steps.info.outputs.run_id}}
        github_token: ${{steps.token.outputs.token}}

    - if: steps.js.outputs.permissions
      uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
      id: push_token
      with:
        app_id: ${{inputs.app_id}}
        private_key: ${{inputs.app_private_key}}
        repositories: >-
          ["${{ steps.js.outputs.repository_name }}"]
        permissions: ${{steps.js.outputs.permissions}}

    - id: token2
      shell: bash
      env:
        IS_PUSH_TOKEN: ${{steps.js.outputs.permissions != ''}}
        TOKEN: ${{steps.token.outputs.token}}
        PUSH_TOKEN: ${{steps.push_token.outputs.token}}
      run: |
        if [ "$IS_PUSH_TOKEN" = "true" ]; then
          echo "token=${PUSH_TOKEN}" >> "$GITHUB_OUTPUT"
        else
          echo "token=${TOKEN}" >> "$GITHUB_OUTPUT"
        fi
