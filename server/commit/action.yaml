name: Create a commit
description: Create a commit
inputs:
  outputs:
    description: |
      Prepare action's outputs
    required: true
  commit_message:
    description: |
      Commit message
    required: false
    default: Securefix
runs:
  using: composite
  steps:
    # Create and push a commit
    - if: fromJSON(inputs.outputs).fixed_files != ''
      id: commit
      uses: suzuki-shunsuke/commit-action@e3299afe2e5ffb76f1987743e3dbc0f00ece72d8 # v0.0.8
      with:
        github_token: ${{fromJSON(inputs.outputs).github_token}}
        repository: ${{fromJSON(inputs.outputs).push_repository}}
        branch: ${{fromJSON(inputs.outputs).branch}}
        files: ${{fromJSON(inputs.outputs).fixed_files}}
        commit_message: |
          ${{fromJSON(fromJSON(inputs.outputs).metadata).inputs.commit_message && fromJSON(fromJSON(inputs.outputs).metadata).inputs.commit_message || inputs.commit_message}}
          ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}

    - shell: bash
      run: |
        echo "pushed: $PUSHED"
        echo "PR: $PR"
      env:
        PUSHED: ${{ steps.commit.outputs.pushed }}
        PR: ${{ toJson(fromJSON(inputs.outputs).create_pull_request) }}
        PR_TITLE: ${{fromJSON(fromJSON(inputs.outputs).create_pull_request).title}}
        IF_FIXED: ${{fromJSON(inputs.outputs).fixed_files != ''}}
        IF_PUSHED: ${{steps.commit.outputs.pushed == 'true'}}
        IF_TITLE: ${{fromJSON(fromJSON(inputs.outputs).create_pull_request).title != ''}}
        IF: ${{ (fromJSON(inputs.outputs).fixed_files != '') && (steps.commit.outputs.pushed == 'true') && (fromJSON(fromJSON(inputs.outputs).create_pull_request).title != '') }}

    # Create a pull request
    - if: (fromJSON(inputs.outputs).fixed_files != '') && (steps.commit.outputs.pushed == 'true') && (fromJSON(fromJSON(inputs.outputs).create_pull_request).title != '')
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      env:
        OUTPUTS: ${{ inputs.outputs }}
      with:
        github-token: ${{fromJSON(inputs.outputs).github_token}}
        script: |
          const outputs = JSON.parse(process.env.OUTPUTS);
          const param = JSON.parse(outputs.create_pull_request);
          const pr = await github.rest.pulls.create({
            owner: outputs.push_repository.split('/')[0],
            repo: outputs.push_repository.split('/')[1],
            head: outputs.branch,
            title: param.title,
            body: param.body,
            // base: fromJSON(fromJSON(inputs.outputs).workflow_run).base_branch,
            draft: param.draft || false,
            labels: param.labels || [],
            reviewers: param.reviewers || [],
            assignees: param.assignees || [],
          });
    # Create a pull request comment
